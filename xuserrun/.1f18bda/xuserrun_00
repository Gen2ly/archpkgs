#!/bin/bash
# Run a command as the currently active X.org server user

# Display usage if no parameters given
if [[ -z "$@" ]]; then
  echo "${0##*/} [program --opts ...] - run a command as the X.org server user"
  exit 1; fi

for prog in loginctl sudo "$1"; do
  if ! hash $prog 2>&- /dev/null; then
    echo "${0##*/}: non-existent program or not installed: "$prog"" && \
    non_prog=yes; fi; done
    [ $non_prog = yes ] && exit 1

# Search through active sessions for one that has the Display value
seat="seat0" # only single-seated (single-server) use detectable
actv_sesss=$(loginctl show-seat $seat -p Sessions | cut -d= -f2)
for session in $actv_sesss; do
  sess_disp=$(loginctl show-session $session -p Display | cut -d= -f2)
  sess_user=$(loginctl show-session $session -p Name    | cut -d= -f2)
  [ -n $sess_disp ] && break; done

# Exit if no X.org server is running
[ -z "$sess_disp" ] && \
{ echo "${0##*/}: warning no X.org server DISPLAY value detected"; }

# Run command as X.org server user
#if   [ $(whoami) = root ]; then
#  XAUTHORITY=/home/$sess_user/.Xauthority DISPLAY="$sess_disp" \
#  su -c - "$(printf $sess_user "%q " "$@")" &
#elif [ $(whoami) = $sess_user ]; then
#  XAUTHORITY=/home/$sess_user/.Xauthority DISPLAY="$sess_disp" "$@" &
#else
#  echo " User does not have X.org server permissions" && exit
#fi

#if [ $sess_user = $USER ]; then
#  XAUTHORITY=/home/$sess_user/.Xauthority DISPLAY="$sess_disp" "$@" &
#else
#  su - $sess_user -c "XAUTHORITY=/home/$sess_user/.Xauthority \
#  DISPLAY="$sess_disp" "$@"" &
  #XAUTHORITY=/home/$sess_user/.Xauthority DISPLAY="$sess_disp" \
  #su - $sess_user -c "$(printf "%q " "$@")" &
  #sudo -u "sess_user" "$@" &
#fi
echo $sess_user
sudo -H -u $sess_user "$@" &